---
subtitle: "Een analyse van kansengelijkheid in studiesucces (Retentie na 1 jaar)"

# Format and output
output-file: "ch-equity.html"

---

<!-- Title -->

# Analyse van kansengelijkheid {#sec-kansengelijkheid}

```{r setup, include = FALSE}
#| label: setup
#| echo: false

# Current file
current_file <- "ch2-equity.qmd"

# Include the _Setup.R file
source("_Setup.R")

```

<!-- HEADER -->

<!-- Studyprogram short -->
{{< include R/qmd/header-studyprogram.qmd >}}

<!-- Introduction -->

## Inleiding

In dit hoofdstuk gaan we in op de onderwerpen bias, fairness en kansengelijkheid. Het doel is beter te begrijpen of er studenten zijn met minder kans op succes en of dit disproportioneel is. Dit kan duiden op kansenongelijkheid.

::: {.content-visible when-profile="advanced-report"}
De analyse van kansengelijkheid heeft de volgende stappen:

1.  We lezen een bewerkte dataset in en prognosemodellen die we in een basis-analyse hebben gemaakt (zie hoofdstuk 3).
2.  We maken een *explainer* om de modellen beter te begrijpen en te kunnen uitleggen.
3.  Vervolgens berekenen we of er *bias* bestaat voor verschillende groepen studenten naar `r concatenate_list(sensitive_variables, tolower = TRUE)`. We analyseren daarvoor de verdeling van kansen en mate van fairness in het prognosemodel dat we hebben ontwikkeld.
4.  We trekken er conclusies uit over de mate van bias binnen de opleiding voor `r tolower(params$model)`.
:::

<!-- Data -->

::: {.content-visible when-profile="advanced-report"}
## Voorbereidingen

### Laad de data

We laden de bewerkte data en het beste prognosemodel in voor:

**Opleiding**: `r current_sp$INS_Faculteit` \| `r get_sp_name_syn(current_sp$INS_Opleidingsnaam_huidig)` (`r current_sp$INS_Opleiding`), `r current_sp$INS_Opleidingsvorm`, eerstejaars - **`r succes_model`**

<!-- Include load-dfpersona -->
```{r}
#| label: load-dfpersona
#| eval: true
#| file: scripts/load-dfpersona.R
```

### Maak een explainer

Om het model beter te begrijpen en te kunnen uitleggen, maken we met behulp van het [`DALEX` package](https://dalex.drwhy.ai) een *explainer*.

DALEX is onder andere ontwikkeld om uit te kunnen leggen welke verklarende variabelen van belang zijn en wat deze voor een effect hebben in een model. Een explainer is een model-onafhankelijke *wrapper*, die inzicht geeft in de voorspellingen van het model en de bijdrage van de variabelen aan de prognose. Een explainer maakt het verder mogelijk om modellen onderling te vergelijken en benchmarken.

<!-- Include the fitted model -->
```{r}
#| label: fitted-model
#| eval: true
#| file: scripts/fitted-model.R
```

<!-- Include the last fit explainer -->
```{r}
#| label: lf-explainer
#| eval: true
#| file: scripts/lf-explainer.R
```

:::
<!-- Equity of opportunity -->

## Analyse van kansengelijkheid

We onderzoeken kansengelijkheid door bias in de data te onderzoeken. Dit wordt ook wel een *fairness analyse* genoemd. Bias voor verschillende groepen studenten kan een teken zijn van kansenongelijkheid. 

::: {.content-visible when-profile="advanced-report"}
Het leidende werk voor fairness analyses is [*Fairness and Machine Learning: Limitations and Opportunities*](https://fairmlbook.org/pdf/fairmlbook.pdf) [@Barocas.2023]. De methode die we in deze analyse hanteren hierop gebaseerd. We maken gebruik van de `DALEX` explainer en onderzoeken de invloed van de variabelen op de `r tolower(research_settings[['succes_label']])` voor verschillende groepen studenten naar `r concatenate_list(sensitive_variables, tolower = TRUE)`.
:::

De volgende **definities** zijn van belang:

-   **Bevoorrechte groep**: Een groep die als referentiegroep wordt beschouwd en mogelijk bevoordeeld wordt. Dit is in deze analyse altijd de meerderheidsgroep (bijv. vrouwen). Welke dit is per opleiding kan verschillen.
-   **Beschermde groep**: Een groep waarvan wordt verwacht dat deze mogelijk benadeeld wordt (bijv. mannen). Dit zijn in deze analyse, afhankelijke van de variabele, altijd een of meer minderheidsgroepen.

<!-- Explanation of confusion matrix -->
::: {.content-visible when-profile="advanced-report"}
{{< include R/qmd/advanced/confusion-matrix-tabset.qmd >}}
:::

<!-- Numbers and percentages by group -->

### Aantallen en percentages per groep

Voor de variabelen `r concatenate_list(sensitive_variables, extend = TRUE, backtick = TRUE)` is de verdeling binnen deze opleiding als volgt:

```{r}
#| label: tbl-amount-and-percentages-per-group
#| tbl-cap: !expr 'glue("Aantallen en percentages naar {concatenate_list(sensitive_variables, tolower = TRUE)} in relatie tot retentie")'
#| results: asis

# Create a table with numbers and percentages for the 3 sensitive 

tbl_summary <- df_sp_enrollments |> 
  select(Retentie, all_of(sensitive_labels)) |> 
  mutate(Retentie = ifelse(Retentie == 1, "Ja", "Nee")) |>
  tbl_summary(by = Retentie) |> 
  add_p(pvalue_fun = ~ style_pvalue(.x, digits = 2),
        test.args = list(
          all_tests("fisher.test") ~ list(simulate.p.value = TRUE),
          all_tests("wilcox.test") ~ list(exact = FALSE)
        )) |> 
  add_significance_stars(
    hide_p = FALSE,
    pattern = "{p.value}{stars}"
  ) |>
  add_overall(col_label = "**Totaal**  \nN = {style_number(N)}") |>
  add_n() |>
  modify_header(label ~ "**Variabele**") |> 
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Retentie na 1 jaar**") |>
  bold_labels() |> 
  as_flex_table() |> 
  flextable::border(border.top = officer::fp_border(color = "grey")) |> 
  set_table_properties(width = 0.8, layout = "autofit")


# Print summary table
tbl_summary

```

<!-- Distribution of opportunities by group -->

### Verdeling van kansen

Voordat we in meer detail kansengelijkheid gaan analyseren, onderzoeken we de *verdeling van de kansen* op retentie voor verschillende groepen studenten voor `r concatenate_list(sensitive_variables)`. De verdeling van deze kansen is uniek per opleiding.

**Toelichting**

-   De verdeling van de kansen is te zien door de *boxplot* en de *violin plot*.
-   De boxplot geeft de vier quartielen aan van de data: de box staat voor de middelste 50% van de data, met een streep die de mediaan aangeeft (de middelste waarde van de data). De lijnen (*whiskers*) geven de 1e 25% en laatste 25% van de data.
-   De boxplot wordt gecombineerd met de violin plot, waarbij de breedte van de violin de dichtheid van de data aangeeft. Het kan zijn dat het lijkt alsof er geen violin is; in dat geval is de verdeling van het aantal studenten zeer breed en de violin vorm daardoor heel smal.
-   Samen geven deze twee visualisaties een goed beeld van de verdeling van de voorspelde kansen van het model.
-   De blauwe gestippelde lijn geeft de 50% kans aan; alle waarden die boven deze lijn vallen hebben een kans van 50% of meer op retentie. Hiervan voorspelt het model dat zij zeker doorstuderen. Deze grenslijn kan door de verdeling van groepen heen lopen. Bedenk in zo'n situatie dat voor een deel van de studenten het model voorspelt dat zij juist wel doorstromen (50% of meer) of juist niet (minder dan 50%).

```{r}
#| label: bias-analysis-density
#| results: asis

# Make a fairness analysis
for (group in c(sensitive_labels)) {

  # Group
  knit_header(group, 4)
  
  # Determine the most common subgroup = Privileged
  privileged <- get_privileged(df_sp_enrollments, group)

  # Create a fairness object
  fairness_object <- get_obj_fairness(explain_lf, group, privileged)
  
  # Create a table from the fairness analysis
  df_fairness_total <- get_df_fairness_total(fairness_object)
  
  # Create a plot of the fairness analysis
  density_plot <- suppressWarnings(
    get_density_plot(fairness_object, group = group) 
  ) 

  # Save the plot
  plot_name <- glue("density_plot_{tolower(group)}")
  plot_path <- get_plot_outputpath(plot_name, mode = "plot", 
                                   best_model = best_model)

  suppressWarnings(finalize_plot(
    plot_name = density_plot,
    save_filepath = plot_path,
    height_pixels = 250 + (50 * length(unique(df_fairness_total$Categorie)))
  ))

  # Show the existing plot
  plot <- glue("![Verdeling en dichtheid van {tolower(research_settings[['succes_label']])} ",
               "naar {tolower(group)}]({plot_path})",
               "{{#fig-fairness-check-{tolower(group)}}",
               "}")
  knit_print_rule(plot)

}

```

::: {.content-visible when-profile="advanced-report"}
### Fairness checks

Nu we de verdeling van de kansen kennen, maken we een fairness analyse voor `r concatenate_list(sensitive_variables)`. Voor elke groep berekenen we de maatstaven die we eerder hebben behandeld.

We maken een plot van de fairness analyse, waarbij we per variabele één categorie nemen als de bevoorrechte groep; hiervoor hanteren we -- zoals al aangegeven -- per variabele de meest frequente groep. Het is waarschijnlijk dat in een opleiding de voorlichting, begeleiding en onderwijs het meest heeft afgestemd op deze groep. 

Als binnen een variabele een groep een ratio heeft die naar links of naar rechts afwijkt, kan dit duiden op een verschil in kansengelijkheid. Let erop dat de bevoorrechte groep zelf hier niet in is opgenomen (!). Mochten alle overige groepen naar links of rechts afwijken, dan is er sprake van een bias naar de bevoorrechte groep.

Het wijkt af als de balken verder buiten het groene vlak komen en in het rode vlak; dit is gebaseerd op een marge, *epsilon*, van 0,8. Deze marge is gebaseerd op het 4/5 principe: er is sprake van een te groot verschil als de maat voor een beschermde groep 4/5 of meer afwijkt van de bevoorrechte groep. Een epsilon van 0,8 leidt tot marges van -0,2 (epsilon/1) en +0,25 (1/espilon). Als er twee ratio's of meer buiten deze marges vallen, is er volgens dit criterium sprake van bias. Als een maatstaf naar links afwijkt is er sprake van bias naar de beschermde groep (ten nadele), als deze naar rechts afwijkt is er sprake van bias naar de bevoorrechte groep (ten voordele).

Alle afwijkingen samen worden opgeteld als absolute waarden en uitgedrukt in de maat 'Totaal verlies'. Hoe hoger de waarde hiervan is, des te groter de verschillen zijn tussen groepen.

::: {.callout-warning appearance="default" icon="true"}
### Nota Bene

Als de uitkomstmaat van een model negatief is (zoals uitval), dan moet de interpretatie precies andersom gemaakt worden. Dit geldt voor alle maatstaven van bias en fairness in dit hoofdstuk.
:::

Om de robuustheid en betrouwbaarheid in de detectie van bias te waarborgen, moeten er minstens twee metrieke waarden buiten de epsilon-marges vallen voordat er sprake is van bias [@Barocas.2023].

<!-- Reasons for the use of two metrics to confirm bias -->
::: {.content-visible when-profile="advanced-report"}
{{< include R/qmd/advanced/bias-metrics-reasons.qmd >}}
:::

```{r}
#| label: bias-analysis
#| results: asis

# Make a fairness analysis
for (group in c(sensitive_labels)) {

  # Group
  knit_header(group, 4)
  
  # Determine the most common subgroup = Privileged
  privileged <- get_privileged(df_sp_enrollments, group)

  # Create a fairness object
  fairness_object <- get_obj_fairness(explain_lf, group, privileged)

  # Create a table from the fairness analysis
  df_fairness_total <- get_df_fairness_total(fairness_object)
  
  # Check for bias
  print_fairness_object_lta(fairness_object)

  # Create a plot of the fairness analysis
  fairness_plot <- suppressWarnings(
    get_fairness_plot(fairness_object, group = group, privileged = privileged) +
      theme(panel.border = element_rect(
        colour = "darkgrey",
        fill = NA,
        size = 0.4
      ))
  )

  # Save the plot
  plot_name <- glue("fairness_plot_{tolower(group)}")
  plot_path <- get_plot_outputpath(plot_name, mode = "plot", best_model = best_model)

  suppressWarnings(finalize_plot(
    plot_name = fairness_plot,
    save_filepath = plot_path,
    height_pixels = 250 + (50 * length(unique(df_fairness_total$Categorie)))
  ))

  # Show the existing plot
  plot <- glue("![Fairness check naar {tolower(group)}]({plot_path})",
               "{{#fig-fairness-check-{tolower(group)}}}")
  knit_print_rule(plot)
  
  # Keep the fairness check data
  fairness_output_path  <- get_model_outputpath(mode = "fairness", group = group)
  df_fairness_check_data <- get_df_fairness_check_data(fairness_object[["fairness_check_data"]],
                                                       group = group)
  saveRDS(df_fairness_check_data, file = fairness_output_path)
  
}

```
:::

<!-- Equity conclusions -->
## Conclusies

{{< include R/qmd/equity-conclusions.qmd >}}

<!-- FOOTER -->

<!-- Justification -->

::: {.content-hidden unless-meta="includes.justification"}
{{< include R/qmd/footer-justification.qmd >}}
:::

<!-- Copyright -->

::: {.content-hidden unless-meta="includes.copyright"}
{{< include R/qmd/footer-copyright.qmd >}}
:::

<!-- Cleaning up -->

```{r}
#| label: cleanup
#| echo: false

# Datasets


# Collect garbage
invisible(gc())
```
